# none: The default for MySQL. No change is made to the database structure
# pring.jpa.hibernate.ddl-auto=none
# Hibernate ddl auto (create, create-drop, validate, update)

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url = jdbc:mysql://localhost:3306/proyectoestadia?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.url=postgres://ixznzdjblyenfu:d4020169e2b1c2178595edbf55af9dac242d7e376af58e8fe3bab38734db65ba@ec2-54-160-96-70.compute-1.amazonaws.com:5432/d7c25nevnqhrsr:5432/proyectoempresa
spring.datasource.username=ixznzdjblyenfu
spring.datasource.password=d4020169e2b1c2178595edbf55af9dac242d7e376af58e8fe3bab38734db65ba
# Session store type.
#spring.session.store-type=jdbc 

# show sql
# spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto = update  
#create 
#none
server.error.whitelabel.enabled=true
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
# Allows Hibernate to generate SQL optimized for a particular DBMS


spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.hibernate.ddl-auto=none
#spring.datasource.url=jdbc:mysql://localhost:3306/testdb
#spring.datasource.username=root
#spring.datasource.password=password
#logging.level.root=WARN

# Indicar el DBMS
#spring.jpa.database: MYSQL

#server.servlet.session.timeout= 2000
# Session timeout. If a duration suffix is not specified, seconds are used.
#spring.session.jdbc.initialize-schema=embedded 
# Database schema initialization mode.
#spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/proyectoestadia.sql 
# Path to the SQL file to use to initialize the database schema.
#spring.session.jdbc.table-name=SPRING_SESSION 
# Name of the database table used to store sessions.

#spring.h2.console.enabled=true

#server.port=8080















# none: The default for MySQL. No change is made to the database structure
# pring.jpa.hibernate.ddl-auto=none
# Hibernate ddl auto (create, create-drop, validate, update)

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url = jdbc:mysql://localhost:3306/proyectoestadia?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
## spring.datasource.url=jdbc:mysql://${MYSQL_HOST:127.0.0.1}:3306/proyectoempresa
##spring.datasource.username=root
##spring.datasource.password=
# Session store type.
#spring.session.store-type=jdbc 

# show sql
## spring.jpa.show-sql = true
## spring.jpa.properties.hibernate.format_sql=true
## spring.jpa.hibernate.ddl-auto = none  
#create 
#none
## server.error.whitelabel.enabled=true
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
# Allows Hibernate to generate SQL optimized for a particular DBMS


## spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

#spring.jpa.hibernate.ddl-auto=none
#spring.datasource.url=jdbc:mysql://localhost:3306/testdb
#spring.datasource.username=root
#spring.datasource.password=password
#logging.level.root=WARN

# Indicar el DBMS
#spring.jpa.database: MYSQL

#server.servlet.session.timeout= 2000
# Session timeout. If a duration suffix is not specified, seconds are used.
#spring.session.jdbc.initialize-schema=embedded 
# Database schema initialization mode.
#spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/proyectoestadia.sql 
# Path to the SQL file to use to initialize the database schema.
#spring.session.jdbc.table-name=SPRING_SESSION 
# Name of the database table used to store sessions.

#spring.h2.console.enabled=true

## server.port=8080




